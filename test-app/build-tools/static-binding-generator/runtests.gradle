import java.nio.file.Files
import java.nio.file.StandardCopyOption

apply plugin: 'application'
apply plugin: 'java-library'

if (!project.hasProperty("loadedProjectDeps")) {
    Properties projectDeps = new Properties()
    projectDeps.load(new FileInputStream("$project.rootDir/../../gradle.properties"))
    projectDeps.each { prop ->
        project.ext.set(prop.key, prop.value)
    }
    project.ext.loadedProjectDeps = true
}

defaultTasks 'runSbg'

repositories {
    google()
    mavenCentral()
}

dependencies {
    // println "\t ~ [DEBUG][static-binding-generator] runtests.gradle - ns_default_asm_version = ${ns_default_asm_version}..."

    api "org.ow2.asm:asm:${ns_default_asm_version}"
    api "org.ow2.asm:asm-util:${ns_default_asm_util_version}"
    api "org.apache.bcel:bcel:${ns_default_bcel_version}"
    api group: 'org.json', name: 'json', version: "${ns_default_json_version}"
    api "commons-io:commons-io:${ns_default_commons_io_version}"
    api "com.google.code.gson:gson:${ns_default_gson_version}"
    api "com.google.googlejavaformat:google-java-format:${ns_default_google_java_format_version}"

    testImplementation "com.google.code.gson:gson:${ns_default_gson_version}"
    testImplementation "junit:junit:${ns_default_junit_version}"
    testImplementation "org.mockito:mockito-core:${ns_default_mockito_core_version}"
}

def appRoot = file(project.appRoot).getAbsolutePath()
def generatedJavaClassesRoot = file(project.generatedJavaClassesRoot).getAbsolutePath()

def inputFile = file('../sbg-input-file.txt')
def outputFile = file('../sbg-output-file.txt')
def javaDependenciesFile = file('../sbg-java-dependencies.txt')
def interfaceNamesFile = file('../sbg-interface-names.txt')

jar {
    configurations.api.setCanBeResolved(true)
    manifest {
        attributes("Manifest-Version": "1.0",
                "Main-Class": "org.nativescript.staticbindinggenerator.Main")
    }
    from {
        configurations.api.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    duplicatesStrategy = 'include'
}

task prepareInputFiles {
    doFirst {
        inputFile.write(appRoot)
        outputFile.write(generatedJavaClassesRoot.toString())
        javaDependenciesFile.write('')
        interfaceNamesFile.write('')
    }
}

task runSbg(type: JavaExec, dependsOn: 'prepareInputFiles') {
    classpath = files('build/libs/static-binding-generator.jar', '../')
    workingDir = "../"
    main = "org.nativescript.staticbindinggenerator.Main"
}
java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}